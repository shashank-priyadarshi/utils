{
  "Issues": [
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\treturn \u0026err"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/constants/errors.go",
        "Offset": 118,
        "Line": 9,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\treturn \u0026str"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/constants/errors.go",
        "Offset": 186,
        "Line": 14,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/database.go",
        "Offset": 0,
        "Line": 5,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/database.go",
        "Offset": 46,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\tadapters \"github.com/shashank-priyadarshi/utilities/database/internal\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/database.go",
        "Offset": 110,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/database.go",
        "Offset": 182,
        "Line": 8,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/ports' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/ports\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/database.go",
        "Offset": 243,
        "Line": 9,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 47,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal/connections' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/internal/connections\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 111,
        "Line": 8,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal/mongodb' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/internal/mongodb\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 186,
        "Line": 9,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal/rdbms' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/internal/rdbms\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 257,
        "Line": 10,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal/redis' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/internal/redis\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 326,
        "Line": 11,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 395,
        "Line": 12,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/ports' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/ports\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 456,
        "Line": 13,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "block should not end with a whitespace (or comment)",
      "Severity": "",
      "SourceLines": [
        "\t}"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 1447,
        "Line": 49,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nakedret",
      "Text": "naked return in func `New` with 36 lines of code",
      "Severity": "",
      "SourceLines": [
        "\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/adapters.go",
        "Offset": 1451,
        "Line": 51,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 5,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/labstack/gommon/log\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 6,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "",
          "\t\"github.com/labstack/gommon/log\""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 7,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 84,
        "Line": 8,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "funlen",
      "Text": "Function 'MongoDB' is too long (66 \u003e 60)",
      "Severity": "",
      "SourceLines": [
        "func MongoDB(ctx context.Context, config *models.Config) (client *mongo.Client, err error) {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 15,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 16,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 465,
        "Line": 20,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 161 characters",
      "Severity": "",
      "SourceLines": [
        "\topts.ApplyURI(config.Options.URI).SetServerAPIOptions(serverAPI).SetMaxPoolSize(uint64(config.Options.DatabaseOptions.MongoDBPoolSize)).SetBSONOptions(bsonOpts)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 29,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "database/internal/connections/mongodb.go:31: Line contains TODO/BUG/FIXME: \"TODO: Create collection if not exist\"",
      "Severity": "",
      "SourceLines": [
        "\t// TODO: Create collection if not exist"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 31,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "database/internal/connections/mongodb.go:66: Line contains TODO/BUG/FIXME: \"TODO: Backoff connection logic\"",
      "Severity": "",
      "SourceLines": [
        "\t// TODO: Backoff connection logic"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 66,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 2403,
        "Line": 70,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "database/internal/connections/mongodb.go:76: Line contains TODO/BUG/FIXME: \"TODO: Backoff disconnection logic\"",
      "Severity": "",
      "SourceLines": [
        "\t\t// TODO: Backoff disconnection logic"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 0,
        "Line": 76,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 2623,
        "Line": 78,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nakedret",
      "Text": "naked return in func `MongoDB` with 67 lines of code",
      "Severity": "",
      "SourceLines": [
        "\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/mongodb.go",
        "Offset": 2635,
        "Line": 81,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 6,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/labstack/gommon/log\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 7,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/glebarez/sqlite\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"github.com/glebarez/sqlite\"",
          "\t\"github.com/labstack/gommon/log\""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 9,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 130,
        "Line": 10,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 194,
        "Line": 11,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func RDBMS(ctx context.Context, config *models.Config) (client interface{}, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func RDBMS(ctx context.Context, config *models.Config) (client interface{}, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 17,
        "To": 18
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 17,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 18,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 520,
        "Line": 22,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 685,
        "Line": 29,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "if statements should only be cuddled with assignments used in the if statement itself",
      "Severity": "",
      "SourceLines": [
        "\t\t\tif gormDB, err = createGORMConnection(config.Options.Driver, conn); err != nil {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 836,
        "Line": 39,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nakedret",
      "Text": "naked return in func `RDBMS` with 40 lines of code",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 985,
        "Line": 41,
        "Column": 5
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 1032,
        "Line": 45,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 1116,
        "Line": 50,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nakedret",
      "Text": "naked return in func `RDBMS` with 40 lines of code",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 1172,
        "Line": 55,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func isSupported(driver constants.Driver) bool {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func isSupported(driver constants.Driver) bool {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 59,
        "To": 60
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 59,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\tvar supported = make(map[constants.Driver]any)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\tsupported := make(map[constants.Driver]any)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 60,
        "To": 61
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 60,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func createGORMConnection(driver constants.Driver, conn *sql.DB) (db *gorm.DB, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func createGORMConnection(driver constants.Driver, conn *sql.DB) (db *gorm.DB, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 78,
        "To": 79
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 78,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 0,
        "Line": 79,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 1769,
        "Line": 83,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 1894,
        "Line": 89,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/rdbms.go",
        "Offset": 1992,
        "Line": 93,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 0,
        "Line": 5,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/labstack/gommon/log\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 0,
        "Line": 6,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "",
          "\t\"github.com/labstack/gommon/log\""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 0,
        "Line": 7,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/redis/go-redis/v9' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\tredisclient \"github.com/redis/go-redis/v9\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 84,
        "Line": 8,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 128,
        "Line": 9,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Redis(ctx context.Context, config *models.Config) (client *redisclient.Client, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Redis(ctx context.Context, config *models.Config) (client *redisclient.Client, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 12,
        "To": 13
      },
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 0,
        "Line": 12,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 0,
        "Line": 13,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 391,
        "Line": 17,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/connections/redis.go",
        "Offset": 721,
        "Line": 32,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 8,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Create(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Create(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 24,
        "To": 25
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 24,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 3, in \u003ccondition\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tif len(args) \u003c 3 {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 474,
        "Line": 26,
        "Column": 17
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 170 characters",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, utilities.NewError(utilities.OperationFailed.Error(), fmt.Sprintf(\"error inserting entries to collection %s of database %s: %v\", collection, database, err))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 51,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Query(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Query(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 57,
        "To": 58
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 57,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 3, in \u003ccondition\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tif len(args) \u003c 3 {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 1464,
        "Line": 59,
        "Column": 17
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 170 characters",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, utilities.NewError(utilities.OperationFailed.Error(), fmt.Sprintf(\"error executing query %+v on collection %s in database %s\", query, collection, database))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 85,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 158 characters",
      "Severity": "",
      "SourceLines": [
        "\t\t\treturn nil, utilities.NewError(utilities.OperationFailed.Error(), fmt.Sprintf(\"error unmarshaling fetched document %+v to array of entries: %v\", cur, err))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 96,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Update(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Update(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 105,
        "To": 106
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 105,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 4, in \u003ccondition\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tif len(args) \u003c 4 {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 2852,
        "Line": 107,
        "Column": 17
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 129 characters",
      "Severity": "",
      "SourceLines": [
        "\tif updateResult, err = h.client.Database(database).Collection(collection).UpdateOne(ctx, filterQuery, updateQuery); err != nil {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 137,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 167 characters",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, utilities.NewError(utilities.OperationFailed.Error(), fmt.Sprintf(\"error updating entry in collection %s of database %s: %v\", collection, database, err))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 138,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Delete(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Delete(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 151,
        "To": 152
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 151,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 3, in \u003ccondition\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tif len(args) \u003c 3 {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 4324,
        "Line": 153,
        "Column": 17
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 169 characters",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, utilities.NewError(utilities.OperationFailed.Error(), fmt.Sprintf(\"error deleting entry from collection %s of database %s: %v\", collection, database, err))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb.go",
        "Offset": 0,
        "Line": 179,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "testpackage",
      "Text": "package should be `mongodb_test` instead of `mongodb`",
      "Severity": "",
      "SourceLines": [
        "package mongodb"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 8,
        "Line": 1,
        "Column": 9
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Create(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Create(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 19,
        "To": 20
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 0,
        "Line": 19,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Query(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Query(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 48,
        "To": 49
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 0,
        "Line": 48,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\t\t\tvalues := response.Result[0].(bson.D)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 1894,
        "Line": 71,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Update(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Update(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 82,
        "To": 83
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 0,
        "Line": 82,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\t\t\tvalues := response.Result[0].(bson.D)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 3010,
        "Line": 109,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Delete(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Delete(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 120,
        "To": 121
      },
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 0,
        "Line": 120,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "database/internal/mongodb/mongodb_test.go:146: Line contains TODO/BUG/FIXME: \"TODO: Result should contain deleted coun...\"",
      "Severity": "",
      "SourceLines": [
        "\t\t\t// TODO: Result should contain deleted count"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/mongodb/mongodb_test.go",
        "Offset": 0,
        "Line": 146,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/gorm/gorm.go",
        "Offset": 36,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godot",
      "Text": "Comment should end in a period",
      "Severity": "",
      "SourceLines": [
        "\t// go run -mod=mod entgo.io/ent/cmd/ent generate --template \u003cdir-path\u003e --template glob=\"path/to/*.tmpl\" ./ent/schema"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// go run -mod=mod entgo.io/ent/cmd/ent generate --template \u003cdir-path\u003e --template glob=\"path/to/*.tmpl\" ./ent/schema."
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 31,
        "Line": 6,
        "Column": 118
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'entgo.io/ent/entc' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t_ \"entgo.io/ent/entc\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 149,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'entgo.io/ent/entc/gen' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t_ \"entgo.io/ent/entc/gen\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 172,
        "Line": 8,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'entgo.io/ent/schema/field' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t_ \"entgo.io/ent/schema/field\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 199,
        "Line": 9,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 230,
        "Line": 10,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal/rdbms/orm/gorm' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\tgormhandler \"github.com/shashank-priyadarshi/utilities/database/internal/rdbms/orm/gorm\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 294,
        "Line": 11,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/ports' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/ports\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 384,
        "Line": 12,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Handle(orm constants.ORM, client interface{}) (handle ports.Database, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Handle(orm constants.ORM, client interface{}) (handle ports.Database, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 16,
        "To": 17
      },
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 0,
        "Line": 16,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 0,
        "Line": 17,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 689,
        "Line": 23,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/orm/orm.go",
        "Offset": 739,
        "Line": 27,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 0,
        "Line": 5,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/labstack/gommon/log\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 0,
        "Line": 6,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "",
          "\t\"github.com/labstack/gommon/log\""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 0,
        "Line": 7,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 83,
        "Line": 8,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal/rdbms/orm' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\tormhandler \"github.com/shashank-priyadarshi/utilities/database/internal/rdbms/orm\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 147,
        "Line": 9,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/internal/rdbms/sql' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\tsqlhandler \"github.com/shashank-priyadarshi/utilities/database/internal/rdbms/sql\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 231,
        "Line": 10,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/ports' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/ports\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 315,
        "Line": 11,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Handle(withORM bool, orm constants.ORM, client interface{}) (handle ports.Database, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Handle(withORM bool, orm constants.ORM, client interface{}) (handle ports.Database, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 14,
        "To": 15
      },
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 0,
        "Line": 14,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 0,
        "Line": 15,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\t\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 654,
        "Line": 22,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/rdbms.go",
        "Offset": 779,
        "Line": 29,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 9,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Handle(client *sql.DB) *Handler {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Handle(client *sql.DB) *Handler {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 17,
        "To": 18
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 17,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 18,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godot",
      "Text": "Comment should end in a period",
      "Severity": "",
      "SourceLines": [
        "Add query validator to validate query and required arguments"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "Add query validator to validate query and required arguments."
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 419,
        "Line": 31,
        "Column": 61
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Query(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Query(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 33,
        "To": 34
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 33,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 34,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 2, in \u003ccondition\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tif len(args) \u003c 2 {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 604,
        "Line": 35,
        "Column": 17
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 136 characters",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, utilities.NewError(utilities.OperationFailed.Error(), fmt.Sprintf(\"error executing query %s on database: %v\", query, err))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 57,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godot",
      "Text": "Comment should end in a period",
      "Severity": "",
      "SourceLines": [
        "Add query validator to validate query and required arguments"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "Add query validator to validate query and required arguments."
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 1511,
        "Line": 77,
        "Column": 61
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Update(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Update(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 79,
        "To": 80
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 79,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 80,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 136 characters",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, utilities.NewError(utilities.OperationFailed.Error(), fmt.Sprintf(\"error executing query %s on database: %v\", query, err))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql.go",
        "Offset": 0,
        "Line": 106,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "testpackage",
      "Text": "package should be `sql_test` instead of `sql`",
      "Severity": "",
      "SourceLines": [
        "package sql"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 8,
        "Line": 1,
        "Column": 9
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          "\t\"strings\"",
          "\t\"testing\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 5,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"strings\"",
        "\t\"testing\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "LineRange": {
        "From": 10,
        "To": 11
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 10,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Create(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Create(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 14,
        "To": 15
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 14,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 15,
        "To": 16
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 15,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Query(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Query(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 39,
        "To": 40
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 39,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 40,
        "To": 41
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 40,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Update(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Update(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 62,
        "To": 63
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 62,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 63,
        "To": 64
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 63,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Delete(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Delete(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 85,
        "To": 86
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 85,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 86,
        "To": 87
      },
      "Pos": {
        "Filename": "database/internal/rdbms/sql/sql_test.go",
        "Offset": 0,
        "Line": 86,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities\"",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "LineRange": {
        "From": 7,
        "To": 8
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 7,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/redis/go-redis/v9\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"github.com/redis/go-redis/v9\"",
          "\t\"github.com/shashank-priyadarshi/utilities\""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 9,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Handle(client *redis.Client) (handle *Handler) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Handle(client *redis.Client) (handle *Handler) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 17,
        "To": 18
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 17,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 18,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Create(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Create(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 27,
        "To": 28
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 27,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 28,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 2, in \u003ccondition\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tif paramsLength \u003c 2 {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 537,
        "Line": 30,
        "Column": 20
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, err"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 836,
        "Line": 46,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 2, in \u003ccondition\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tif paramsLength \u003e 2 {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 893,
        "Line": 51,
        "Column": 20
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\t\treturn nil, err"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 1055,
        "Line": 54,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "if statements should only be cuddled with assignments used in the if statement itself",
      "Severity": "",
      "SourceLines": [
        "\tif result, err = resultCmd.Result(); err != nil {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 1280,
        "Line": 64,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Query(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Query(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 73,
        "To": 74
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 73,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 74,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, err"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 1853,
        "Line": 89,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "if statements should only be cuddled with assignments used in the if statement itself",
      "Severity": "",
      "SourceLines": [
        "\tif result, err = resultCmd.Result(); err != nil {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 2055,
        "Line": 98,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Delete(ctx context.Context, args ...interface{}) (*models.Response, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Delete(ctx context.Context, args ...interface{}) (*models.Response, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 111,
        "To": 112
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 111,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 0,
        "Line": 112,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\treturn nil, err"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 2758,
        "Line": 127,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "if statements should only be cuddled with assignments used in the if statement itself",
      "Severity": "",
      "SourceLines": [
        "\tif result, err = resultCmd.Result(); err != nil {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis.go",
        "Offset": 2959,
        "Line": 136,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "testpackage",
      "Text": "package should be `redis_test` instead of `redis`",
      "Severity": "",
      "SourceLines": [
        "package redis"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 8,
        "Line": 1,
        "Column": 9
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Create(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Create(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 14,
        "To": 15
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 14,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 15,
        "To": 16
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 15,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Query(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Query(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 47,
        "To": 48
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 47,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 48,
        "To": 49
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 48,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\tassert.Equal(t, value, result.Result[0].(string))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 1561,
        "Line": 72,
        "Column": 28
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Update(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Update(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 82,
        "To": 83
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 82,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 83,
        "To": 84
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 83,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\tassert.Equal(t, \"OK\", result.Result[0].(string))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 2372,
        "Line": 108,
        "Column": 27
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\tassert.Equal(t, value, result.Result[0].(string))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 2510,
        "Line": 113,
        "Column": 28
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func Test_Delete(t *testing.T) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func Test_Delete(t *testing.T) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 123,
        "To": 124
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 123,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "",
        "\t//logger := ports.NewMockLogger(t)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t// logger := ports.NewMockLogger(t)"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 124,
        "To": 125
      },
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 0,
        "Line": 124,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\tassert.Equal(t, int64(0), result.Result[0].(int64))"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/internal/redis/redis_test.go",
        "Offset": 3229,
        "Line": 146,
        "Column": 31
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/models/models.go",
        "Offset": 26,
        "Line": 4,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/database/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/database/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "database/ports/ports.go",
        "Offset": 37,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/sirupsen/logrus' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/sirupsen/logrus\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/logrus.go",
        "Offset": 36,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "logger/internal/logrus.go:42: Line contains TODO/BUG/FIXME: \"TODO: Implement structured logging with ...\"",
      "Severity": "",
      "SourceLines": [
        "\t// TODO: Implement structured logging with fields using logrus.Fields"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/logrus.go",
        "Offset": 0,
        "Line": 42,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\treturn logger"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 365,
        "Line": 25,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "\tvar opts = \u0026slog.HandlerOptions{}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\topts := \u0026slog.HandlerOptions{}"
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 0,
        "Line": 29,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "declarations should never be cuddled",
      "Severity": "",
      "SourceLines": [
        "\tvar handler slog.Handler"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 476,
        "Line": 30,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "block should not start with a whitespace",
      "Severity": "",
      "SourceLines": [
        "\topts.ReplaceAttr = func(groups []string, a slog.Attr) slog.Attr {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 591,
        "Line": 33,
        "Column": 66
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\t\t\tlevel := a.Value.Any().(slog.Level)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 664,
        "Line": 38,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "ineffassign",
      "Text": "ineffectual assignment to levelLabel",
      "Severity": "",
      "SourceLines": [
        "\t\t\tlevelLabel, exists := LevelNames[level]"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 703,
        "Line": 39,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "only one cuddle assignment allowed before if statement",
      "Severity": "",
      "SourceLines": [
        "\t\t\tif exists {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 746,
        "Line": 40,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "assignments should only be cuddled with other assignments",
      "Severity": "",
      "SourceLines": [
        "\t\t\ta.Value = slog.StringValue(levelLabel)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 1021,
        "Line": 54,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "prealloc",
      "Text": "Consider pre-allocating `attrs`",
      "Severity": "",
      "SourceLines": [
        "\tvar attrs []any"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/slog.go",
        "Offset": 2131,
        "Line": 112,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "logger/internal/zap.go",
        "Offset": 0,
        "Line": 4,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\treturn \u0026Zap{"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/zap.go",
        "Offset": 206,
        "Line": 14,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "logger/internal/zap.go:40: Line contains TODO/BUG/FIXME: \"TODO: Implement structured logging with ...\"",
      "Severity": "",
      "SourceLines": [
        "\t// TODO: Implement structured logging with fields using zap.Field"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/zap.go",
        "Offset": 0,
        "Line": 40,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/rs/zerolog' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/rs/zerolog\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/zerolog.go",
        "Offset": 42,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "logger/internal/zerolog.go:41: Line contains TODO/BUG/FIXME: \"TODO: Implement structured logging with ...\"",
      "Severity": "",
      "SourceLines": [
        "\t// TODO: Implement structured logging with fields"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/internal/zerolog.go",
        "Offset": 0,
        "Line": 41,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "import ("
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "import (",
          "\t\"time\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "logger/logger.go",
        "Offset": 0,
        "Line": 3,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/logger/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/logger/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/logger.go",
        "Offset": 26,
        "Line": 4,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/logger/internal' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/logger/internal\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/logger.go",
        "Offset": 88,
        "Line": 5,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/logger/ports' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/logger/ports\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/logger.go",
        "Offset": 149,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"time\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "logger/logger.go",
        "Offset": 0,
        "Line": 7,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 24, in \u003cargument\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\t\t\tduration = int64(24 * time.Hour)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/logger.go",
        "Offset": 1649,
        "Line": 90,
        "Column": 21
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 8, in \u003coperation\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\t\t\tmaxFileSize = 8 * 1024 * 1024"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "logger/logger.go",
        "Offset": 1711,
        "Line": 94,
        "Column": 18
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/network/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "import \"github.com/shashank-priyadarshi/utilities/network/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "network/constants/constants.go",
        "Offset": 26,
        "Line": 3,
        "Column": 8
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "typecheck",
      "Text": "undefined: ports.Protocol",
      "Severity": "",
      "SourceLines": [
        "func New(config *models.Config) (ports.Protocol, error) {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "network/internal/application/application.go",
        "Offset": 0,
        "Line": 11,
        "Column": 40
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "typecheck",
      "Text": "undefined: ports.Protocol",
      "Severity": "",
      "SourceLines": [
        "func New(config *models.Config) (ports.Protocol, error) {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "network/internal/application/http/http.go",
        "Offset": 0,
        "Line": 11,
        "Column": 40
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 130 characters",
      "Severity": "",
      "SourceLines": [
        "subscribers: map[subsciberID]subcriberChan stores list of all subscribers, helps when removing a subscriber channel at unsubscribe"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 22,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "return with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 1976,
        "Line": 58,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 127 characters",
      "Severity": "",
      "SourceLines": [
        "func (p *pubsub) Subscribe(topic string) (subscriberID string, messageChan \u003c-chan interface{}, statusChan chan\u003c- interface{}) {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 71,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (p *pubsub) publishMessagesBeforeAnySubscriber(topic string) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (p *pubsub) publishMessagesBeforeAnySubscriber(topic string) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 93,
        "To": 94
      },
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 93,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 94,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "godox",
      "Text": "pubsub/pubsub.go:101: Line contains TODO/BUG/FIXME: \"BUG: If a new subscriber comes online wh...\"",
      "Severity": "",
      "SourceLines": [
        "\t/*"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 100,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 129 characters",
      "Severity": "",
      "SourceLines": [
        "\t\tBUG: If a new subscriber comes online when there already are subscribers, duplicate messages will be resent to older subscriber"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 101,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (p *pubsub) Unsubscribe(topic string, subscriberID string) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (p *pubsub) Unsubscribe(topic string, subscriberID string) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 114,
        "To": 115
      },
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 114,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 115,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "declarations should never be cuddled",
      "Severity": "",
      "SourceLines": [
        "\tvar ok bool"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 3374,
        "Line": 117,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "nlreturn",
      "Text": "break with no blank line before",
      "Severity": "",
      "SourceLines": [
        "\t\t\tbreak"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 3651,
        "Line": 130,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "only cuddled expressions if assigning variable or using from line above",
      "Severity": "",
      "SourceLines": [
        "\tclose(channel)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 3710,
        "Line": 136,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (p *pubsub) exists(topic string) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (p *pubsub) exists(topic string) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 141,
        "To": 142
      },
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 141,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 0,
        "Line": 142,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\treturn"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub.go",
        "Offset": 4333,
        "Line": 165,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "testpackage",
      "Text": "package should be `pubsub_test` instead of `pubsub`",
      "Severity": "",
      "SourceLines": [
        "package pubsub"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "pubsub/pubsub_test.go",
        "Offset": 8,
        "Line": 1,
        "Column": 9
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "import \"github.com/shashank-priyadarshi/utilities/secretxform/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/constants/constants.go",
        "Offset": 26,
        "Line": 3,
        "Column": 8
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 28,
        "Line": 4,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/internal/jwt' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/internal/jwt\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 95,
        "Line": 5,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 165,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/ports' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/ports\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 229,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func New(config *models.Config) (ports.Data, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func New(config *models.Config) (ports.Data, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 10,
        "To": 11
      },
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 0,
        "Line": 10,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 0,
        "Line": 11,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary trailing newline",
      "Severity": "",
      "SourceLines": [
        "",
        "\t}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t}"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 18,
        "To": 19
      },
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 0,
        "Line": 18,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "block should not end with a whitespace (or comment)",
      "Severity": "",
      "SourceLines": [
        "\t}"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/adapters.go",
        "Offset": 463,
        "Line": 19,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          "\t\"strings\"",
          "\t\"time\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 4,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/golang-jwt/jwt/v5' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/golang-jwt/jwt/v5\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 30,
        "Line": 5,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/golang-jwt/jwt/v5' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t_ \"github.com/golang-jwt/jwt/v5\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 62,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 96,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"strings\"",
        "\t\"time\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "LineRange": {
        "From": 8,
        "To": 9
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 8,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Generate(customClaims map[string]interface{}) (token string, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Generate(customClaims map[string]interface{}) (token string, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 26,
        "To": 27
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 26,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 27,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\tclaims := newToken.Claims.(jwt.MapClaims)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 648,
        "Line": 29,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Validate(token string, customClaims map[string]interface{}) (err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Validate(token string, customClaims map[string]interface{}) (err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 44,
        "To": 45
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 44,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 45,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 47,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) validate(token *jwt.Token, customClaims map[string]interface{}) (claims jwt.MapClaims, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) validate(token *jwt.Token, customClaims map[string]interface{}) (claims jwt.MapClaims, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 57,
        "To": 58
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 57,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 58,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "forcetypeassert",
      "Text": "type assertion must be checked",
      "Severity": "",
      "SourceLines": [
        "\tclaims = token.Claims.(jwt.MapClaims)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 1239,
        "Line": 59,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "\tfor key, val := range h.defaultClaims {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\tfor key, val := range h.defaultClaims {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 61,
        "To": 62
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 61,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "declarations should never be cuddled",
      "Severity": "",
      "SourceLines": [
        "\t\tvar ok bool"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 1349,
        "Line": 64,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "\tfor key, val := range customClaims {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\tfor key, val := range customClaims {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 75,
        "To": 76
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 75,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "declarations should never be cuddled",
      "Severity": "",
      "SourceLines": [
        "\t\tvar ok bool"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 1614,
        "Line": 78,
        "Column": 3
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (h *Handler) Refresh(token string, customClaims map[string]interface{}) (refreshedToken string, err error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (h *Handler) Refresh(token string, customClaims map[string]interface{}) (refreshedToken string, err error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 92,
        "To": 93
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 92,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 93,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "only one cuddle assignment allowed before if statement",
      "Severity": "",
      "SourceLines": [
        "\tif err != nil {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 2011,
        "Line": 96,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "if statements should only be cuddled with assignments used in the if statement itself",
      "Severity": "",
      "SourceLines": [
        "\tif claims, err = h.validate(tokenObj, customClaims); err != nil {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 2087,
        "Line": 101,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 15, in \u003cargument\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\tclaims[\"exp\"] = time.Now().Add(15 * time.Minute)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 2218,
        "Line": 105,
        "Column": 33
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "\treturn jwt.Parse(token, func(token *jwt.Token) (interface{}, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\treturn jwt.Parse(token, func(token *jwt.Token) (interface{}, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 112,
        "To": 113
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 112,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/internal/jwt/jwt.go",
        "Offset": 0,
        "Line": 113,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/secretxform.go",
        "Offset": 31,
        "Line": 4,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "goimports",
      "Text": "File is not `goimports`-ed",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/internal\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\tadapters \"github.com/shashank-priyadarshi/utilities/secretxform/internal\""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/secretxform.go",
        "Offset": 0,
        "Line": 5,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/models' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/models\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/secretxform.go",
        "Offset": 164,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/secretxform/ports' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/secretxform/ports\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/secretxform.go",
        "Offset": 228,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func New(config *models.Config) (ports.Data, error) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func New(config *models.Config) (ports.Data, error) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 10,
        "To": 11
      },
      "Pos": {
        "Filename": "secretxform/secretxform.go",
        "Offset": 0,
        "Line": 10,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "secretxform/secretxform.go",
        "Offset": 0,
        "Line": 11,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\treturn false"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "secretxform/secretxform.go",
        "Offset": 546,
        "Line": 24,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "typecheck",
      "Text": "could not import github.com/shashank-priyadarshi/utilities/test/integration/modules/logger (-: # github.com/shashank-priyadarshi/utilities/test/integration/modules/logger\ntest/integration/modules/logger/logger.go:20:14: assignment mismatch: 2 variables but logger.New returns 1 value\ntest/integration/modules/logger/logger.go:20:25: cannot use logProvider (variable of type string) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New\ntest/integration/modules/logger/logger.go:20:38: cannot use logLevel (variable of type string) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New\ntest/integration/modules/logger/logger.go:20:48: cannot use logFormat (variable of type string) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New\ntest/integration/modules/logger/logger.go:20:59: cannot use trace (variable of type bool) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New)",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/test/integration/modules/logger\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "test/integration/integration.go",
        "Offset": 0,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "typecheck",
      "Text": ": # github.com/shashank-priyadarshi/utilities/test/integration/modules/logger\ntest/integration/modules/logger/logger.go:20:14: assignment mismatch: 2 variables but logger.New returns 1 value\ntest/integration/modules/logger/logger.go:20:25: cannot use logProvider (variable of type string) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New\ntest/integration/modules/logger/logger.go:20:38: cannot use logLevel (variable of type string) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New\ntest/integration/modules/logger/logger.go:20:48: cannot use logFormat (variable of type string) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New\ntest/integration/modules/logger/logger.go:20:59: cannot use trace (variable of type bool) as func(*\"github.com/shashank-priyadarshi/utilities/logger\".Logger) value in argument to logger.New",
      "Severity": "",
      "SourceLines": [
        "package logger"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "test/integration/modules/logger/logger.go",
        "Offset": 0,
        "Line": 1,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "typecheck",
      "Text": "could not import github.com/shashank-priyadarshi/utilities/worker (-: # github.com/shashank-priyadarshi/utilities/worker\nworker/worker.go:51:23: assignment mismatch: 2 variables but logger.New returns 1 value\nworker/worker.go:51:34: cannot use \"slog\" (untyped string constant) as func(*logger.Logger) value in argument to logger.New\nworker/worker.go:51:42: cannot use \"info\" (untyped string constant) as func(*logger.Logger) value in argument to logger.New\nworker/worker.go:51:50: cannot use \"json\" (untyped string constant) as func(*logger.Logger) value in argument to logger.New\nworker/worker.go:51:58: cannot use false (untyped bool constant) as func(*logger.Logger) value in argument to logger.New)",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/worker\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "test/integration/modules/worker/worker.go",
        "Offset": 0,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "type Integration struct {",
        "}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "type Integration struct{}"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 22,
        "To": 23
      },
      "Pos": {
        "Filename": "test/types/types.go",
        "Offset": 0,
        "Line": 22,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "type Profile struct {",
        "}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "type Profile struct{}"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 25,
        "To": 26
      },
      "Pos": {
        "Filename": "test/types/types.go",
        "Offset": 0,
        "Line": 25,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "type Load struct {",
        "}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "type Load struct{}"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 28,
        "To": 29
      },
      "Pos": {
        "Filename": "test/types/types.go",
        "Offset": 0,
        "Line": 28,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/worker/types' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "import \"github.com/shashank-priyadarshi/utilities/worker/types\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/constants/constants.go",
        "Offset": 26,
        "Line": 3,
        "Column": 8
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          "\t\"sync\"",
          "\t\"time\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 4,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"sync\"",
        "\t\"time\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "LineRange": {
        "From": 8,
        "To": 9
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 8,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func NewOrchestrator(workerCount, scalingFactor int, autoScale bool) *Orchestrator {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func NewOrchestrator(workerCount, scalingFactor int, autoScale bool) *Orchestrator {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 23,
        "To": 24
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 23,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 24,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "\tvar workers = make(chan *worker.Worker, workerCount)"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\tworkers := make(chan *worker.Worker, workerCount)"
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 26,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\treturn \u0026Orchestrator{"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 975,
        "Line": 35,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "go statements can only invoke functions assigned on line above",
      "Severity": "",
      "SourceLines": [
        "\tgo func() {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 1318,
        "Line": 47,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gomnd",
      "Text": "mnd: Magic number: 10, in \u003cargument\u003e detected",
      "Severity": "",
      "SourceLines": [
        "\ttime.Sleep(10 * time.Second)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 1450,
        "Line": 55,
        "Column": 13
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "block should not start with a whitespace",
      "Severity": "",
      "SourceLines": [
        "\t\t\tcase newWork := \u003c-o.WorkQueue:"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 1598,
        "Line": 62,
        "Column": 33
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "lll",
      "Text": "line is 122 characters",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\tfmt.Printf(\"Pushing new work with ID %s for execution by available idle worker: %s\\n\", newWork.ID, availableWorker.ID)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 79,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "}",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 87,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (o *Orchestrator) Scale(count int, hotShutdown bool) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (o *Orchestrator) Scale(count int, hotShutdown bool) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 88,
        "To": 89
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 88,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 89,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "only one cuddle assignment allowed before go statement",
      "Severity": "",
      "SourceLines": [
        "\t\t\tgo func(newWorker *worker.Worker) { newWorker.Start() }(newWorker)"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 2700,
        "Line": 111,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary trailing newline",
      "Severity": "",
      "SourceLines": [
        "",
        "\t}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t}"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 113,
        "To": 114
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 113,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "block should not end with a whitespace (or comment)",
      "Severity": "",
      "SourceLines": [
        "\t}"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 2773,
        "Line": 114,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (o *Orchestrator) updateWorkers(workers chan *worker.Worker) {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (o *Orchestrator) updateWorkers(workers chan *worker.Worker) {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 118,
        "To": 119
      },
      "Pos": {
        "Filename": "worker/orchestrator/orchestrator.go",
        "Offset": 0,
        "Line": 118,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          "\t\"time\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 0,
        "Line": 5,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/google/uuid' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/google/uuid\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 42,
        "Line": 6,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/worker/constants' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/worker/constants\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 68,
        "Line": 7,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "depguard",
      "Text": "import 'github.com/shashank-priyadarshi/utilities/worker/types' is not allowed from list 'Main'",
      "Severity": "",
      "SourceLines": [
        "\t\"github.com/shashank-priyadarshi/utilities/worker/types\""
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 130,
        "Line": 8,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"time\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 0,
        "Line": 9,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func NewWork(job types.Job, maxExecutionTime time.Duration) *Work {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func NewWork(job types.Job, maxExecutionTime time.Duration) *Work {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 23,
        "To": 24
      },
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 0,
        "Line": 23,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 0,
        "Line": 24,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "assignments should only be cuddled with other assignments",
      "Severity": "",
      "SourceLines": [
        "\tctx, cancel := context.WithCancel(context.Background())"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 585,
        "Line": 26,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\treturn work"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 938,
        "Line": 37,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "}",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 0,
        "Line": 43,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        "}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "}",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/work/work.go",
        "Offset": 0,
        "Line": 46,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "typecheck",
      "Text": ": # github.com/shashank-priyadarshi/utilities/worker\nworker/worker.go:51:23: assignment mismatch: 2 variables but logger.New returns 1 value\nworker/worker.go:51:34: cannot use \"slog\" (untyped string constant) as func(*logger.Logger) value in argument to logger.New\nworker/worker.go:51:42: cannot use \"info\" (untyped string constant) as func(*logger.Logger) value in argument to logger.New\nworker/worker.go:51:50: cannot use \"json\" (untyped string constant) as func(*logger.Logger) value in argument to logger.New\nworker/worker.go:51:58: cannot use false (untyped bool constant) as func(*logger.Logger) value in argument to logger.New",
      "Severity": "",
      "SourceLines": [
        "package worker"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/worker.go",
        "Offset": 0,
        "Line": 1,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"fmt\""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\"fmt\"",
          "\t\"time\"",
          ""
        ],
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 0,
        "Line": 4,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gci",
      "Text": "File is not `gci`-ed with --skip-generated -s standard -s default",
      "Severity": "",
      "SourceLines": [
        "\t\"time\""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 0,
        "Line": 8,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func NewWorker(workers chan\u003c- *Worker) *Worker {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func NewWorker(workers chan\u003c- *Worker) *Worker {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 18,
        "To": 19
      },
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 0,
        "Line": 18,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 0,
        "Line": 19,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "return statements should not be cuddled if block has more than two lines",
      "Severity": "",
      "SourceLines": [
        "\treturn worker"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 614,
        "Line": 29,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary leading newline",
      "Severity": "",
      "SourceLines": [
        "func (w *Worker) Start() {",
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "func (w *Worker) Start() {"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 32,
        "To": 33
      },
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 0,
        "Line": 32,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "gofumpt",
      "Text": "File is not `gofumpt`-ed",
      "Severity": "",
      "SourceLines": [
        ""
      ],
      "Replacement": {
        "NeedOnlyDelete": true,
        "NewLines": null,
        "Inline": null
      },
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 0,
        "Line": 33,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "go statements can only invoke functions assigned on line above",
      "Severity": "",
      "SourceLines": [
        "\tgo func() {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 707,
        "Line": 35,
        "Column": 2
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "only one cuddle assignment allowed before if statement",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\tif newWork.Status.String() != timeout.String() {"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 1609,
        "Line": 65,
        "Column": 5
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "assignments should only be cuddled with other assignments",
      "Severity": "",
      "SourceLines": [
        "\t\t\t\tnewWork.Result = result"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 1710,
        "Line": 68,
        "Column": 5
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "whitespace",
      "Text": "unnecessary trailing newline",
      "Severity": "",
      "SourceLines": [
        "",
        "\t\t\t}"
      ],
      "Replacement": {
        "NeedOnlyDelete": false,
        "NewLines": [
          "\t\t\t}"
        ],
        "Inline": null
      },
      "LineRange": {
        "From": 75,
        "To": 76
      },
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 0,
        "Line": 75,
        "Column": 0
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    },
    {
      "FromLinter": "wsl",
      "Text": "block should not end with a whitespace (or comment)",
      "Severity": "",
      "SourceLines": [
        "\t\t\t}"
      ],
      "Replacement": null,
      "Pos": {
        "Filename": "worker/worker/worker.go",
        "Offset": 1820,
        "Line": 76,
        "Column": 4
      },
      "ExpectNoLint": false,
      "ExpectedNoLintLinter": ""
    }
  ],
  "Report": {
    "Linters": [
      {
        "Name": "asasalint"
      },
      {
        "Name": "asciicheck",
        "Enabled": true
      },
      {
        "Name": "bidichk",
        "Enabled": true
      },
      {
        "Name": "bodyclose"
      },
      {
        "Name": "containedctx"
      },
      {
        "Name": "contextcheck"
      },
      {
        "Name": "cyclop"
      },
      {
        "Name": "decorder",
        "Enabled": true
      },
      {
        "Name": "deadcode"
      },
      {
        "Name": "depguard",
        "Enabled": true
      },
      {
        "Name": "dogsled",
        "Enabled": true
      },
      {
        "Name": "dupl",
        "Enabled": true
      },
      {
        "Name": "dupword",
        "Enabled": true
      },
      {
        "Name": "durationcheck"
      },
      {
        "Name": "errcheck",
        "EnabledByDefault": true
      },
      {
        "Name": "errchkjson"
      },
      {
        "Name": "errname"
      },
      {
        "Name": "errorlint"
      },
      {
        "Name": "execinquery"
      },
      {
        "Name": "exhaustive"
      },
      {
        "Name": "exhaustivestruct"
      },
      {
        "Name": "exhaustruct"
      },
      {
        "Name": "exportloopref"
      },
      {
        "Name": "forbidigo"
      },
      {
        "Name": "forcetypeassert",
        "Enabled": true
      },
      {
        "Name": "funlen",
        "Enabled": true
      },
      {
        "Name": "gci",
        "Enabled": true
      },
      {
        "Name": "ginkgolinter"
      },
      {
        "Name": "gocheckcompilerdirectives",
        "Enabled": true
      },
      {
        "Name": "gochecknoglobals"
      },
      {
        "Name": "gochecknoinits",
        "Enabled": true
      },
      {
        "Name": "gocognit",
        "Enabled": true
      },
      {
        "Name": "goconst",
        "Enabled": true
      },
      {
        "Name": "gocritic"
      },
      {
        "Name": "gocyclo",
        "Enabled": true
      },
      {
        "Name": "godot",
        "Enabled": true
      },
      {
        "Name": "godox",
        "Enabled": true
      },
      {
        "Name": "goerr113"
      },
      {
        "Name": "gofmt",
        "Enabled": true
      },
      {
        "Name": "gofumpt",
        "Enabled": true
      },
      {
        "Name": "goheader",
        "Enabled": true
      },
      {
        "Name": "goimports",
        "Enabled": true
      },
      {
        "Name": "golint"
      },
      {
        "Name": "gomnd",
        "Enabled": true
      },
      {
        "Name": "gomoddirectives",
        "Enabled": true
      },
      {
        "Name": "gomodguard",
        "Enabled": true
      },
      {
        "Name": "goprintffuncname",
        "Enabled": true
      },
      {
        "Name": "gosec"
      },
      {
        "Name": "gosimple",
        "EnabledByDefault": true
      },
      {
        "Name": "gosmopolitan"
      },
      {
        "Name": "govet",
        "EnabledByDefault": true
      },
      {
        "Name": "grouper",
        "Enabled": true
      },
      {
        "Name": "ifshort"
      },
      {
        "Name": "importas"
      },
      {
        "Name": "ineffassign",
        "Enabled": true,
        "EnabledByDefault": true
      },
      {
        "Name": "interfacebloat",
        "Enabled": true
      },
      {
        "Name": "interfacer"
      },
      {
        "Name": "ireturn"
      },
      {
        "Name": "lll",
        "Enabled": true
      },
      {
        "Name": "loggercheck"
      },
      {
        "Name": "maintidx",
        "Enabled": true
      },
      {
        "Name": "makezero"
      },
      {
        "Name": "maligned"
      },
      {
        "Name": "mirror"
      },
      {
        "Name": "misspell",
        "Enabled": true
      },
      {
        "Name": "musttag"
      },
      {
        "Name": "nakedret",
        "Enabled": true
      },
      {
        "Name": "nestif",
        "Enabled": true
      },
      {
        "Name": "nilerr"
      },
      {
        "Name": "nilnil"
      },
      {
        "Name": "nlreturn",
        "Enabled": true
      },
      {
        "Name": "noctx"
      },
      {
        "Name": "nonamedreturns"
      },
      {
        "Name": "nosnakecase"
      },
      {
        "Name": "nosprintfhostport",
        "Enabled": true
      },
      {
        "Name": "paralleltest"
      },
      {
        "Name": "prealloc",
        "Enabled": true
      },
      {
        "Name": "predeclared",
        "Enabled": true
      },
      {
        "Name": "promlinter",
        "Enabled": true
      },
      {
        "Name": "reassign"
      },
      {
        "Name": "revive"
      },
      {
        "Name": "rowserrcheck"
      },
      {
        "Name": "scopelint"
      },
      {
        "Name": "sqlclosecheck"
      },
      {
        "Name": "staticcheck",
        "EnabledByDefault": true
      },
      {
        "Name": "structcheck"
      },
      {
        "Name": "stylecheck"
      },
      {
        "Name": "tagalign",
        "Enabled": true
      },
      {
        "Name": "tagliatelle",
        "Enabled": true
      },
      {
        "Name": "tenv"
      },
      {
        "Name": "testableexamples",
        "Enabled": true
      },
      {
        "Name": "testpackage",
        "Enabled": true
      },
      {
        "Name": "thelper"
      },
      {
        "Name": "tparallel"
      },
      {
        "Name": "typecheck",
        "Enabled": true,
        "EnabledByDefault": true
      },
      {
        "Name": "unconvert"
      },
      {
        "Name": "unparam"
      },
      {
        "Name": "unused",
        "EnabledByDefault": true
      },
      {
        "Name": "usestdlibvars",
        "Enabled": true
      },
      {
        "Name": "varcheck"
      },
      {
        "Name": "varnamelen"
      },
      {
        "Name": "wastedassign"
      },
      {
        "Name": "whitespace",
        "Enabled": true
      },
      {
        "Name": "wrapcheck"
      },
      {
        "Name": "wsl",
        "Enabled": true
      },
      {
        "Name": "zerologlint"
      },
      {
        "Name": "nolintlint",
        "Enabled": true
      }
    ]
  }
}
